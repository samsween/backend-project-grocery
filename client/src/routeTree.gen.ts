/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StoreImport } from './routes/store'
import { Route as ProfileImport } from './routes/profile'
import { Route as LoginImport } from './routes/login'
import { Route as AdminImport } from './routes/_admin'
import { Route as StoreIndexImport } from './routes/store/index'
import { Route as AdminIndexImport } from './routes/_admin.index'
import { Route as AdminProductsImport } from './routes/_admin.products'
import { Route as AdminOrdersImport } from './routes/_admin.orders'
import { Route as AdminEmployeesImport } from './routes/_admin.employees'
import { Route as StoreProductsIndexImport } from './routes/store/products.index'
import { Route as StoreProductsIdImport } from './routes/store/products.$id'

// Create/Update Routes

const StoreRoute = StoreImport.update({
  path: '/store',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const StoreIndexRoute = StoreIndexImport.update({
  path: '/',
  getParentRoute: () => StoreRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminProductsRoute = AdminProductsImport.update({
  path: '/products',
  getParentRoute: () => AdminRoute,
} as any)

const AdminOrdersRoute = AdminOrdersImport.update({
  path: '/orders',
  getParentRoute: () => AdminRoute,
} as any)

const AdminEmployeesRoute = AdminEmployeesImport.update({
  path: '/employees',
  getParentRoute: () => AdminRoute,
} as any)

const StoreProductsIndexRoute = StoreProductsIndexImport.update({
  path: '/products/',
  getParentRoute: () => StoreRoute,
} as any)

const StoreProductsIdRoute = StoreProductsIdImport.update({
  path: '/products/$id',
  getParentRoute: () => StoreRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_admin': {
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/store': {
      preLoaderRoute: typeof StoreImport
      parentRoute: typeof rootRoute
    }
    '/_admin/employees': {
      preLoaderRoute: typeof AdminEmployeesImport
      parentRoute: typeof AdminImport
    }
    '/_admin/orders': {
      preLoaderRoute: typeof AdminOrdersImport
      parentRoute: typeof AdminImport
    }
    '/_admin/products': {
      preLoaderRoute: typeof AdminProductsImport
      parentRoute: typeof AdminImport
    }
    '/_admin/': {
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/store/': {
      preLoaderRoute: typeof StoreIndexImport
      parentRoute: typeof StoreImport
    }
    '/store/products/$id': {
      preLoaderRoute: typeof StoreProductsIdImport
      parentRoute: typeof StoreImport
    }
    '/store/products/': {
      preLoaderRoute: typeof StoreProductsIndexImport
      parentRoute: typeof StoreImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AdminRoute.addChildren([
    AdminEmployeesRoute,
    AdminOrdersRoute,
    AdminProductsRoute,
    AdminIndexRoute,
  ]),
  LoginRoute,
  ProfileRoute,
  StoreRoute.addChildren([
    StoreIndexRoute,
    StoreProductsIdRoute,
    StoreProductsIndexRoute,
  ]),
])

/* prettier-ignore-end */
