/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AdminImport } from './routes/admin'
import { Route as StoreImport } from './routes/_store'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as StoreIndexImport } from './routes/_store/index'
import { Route as AdminUsersImport } from './routes/admin/users'
import { Route as AdminOrdersImport } from './routes/admin/orders'
import { Route as StoreCategoryImport } from './routes/_store/$category'
import { Route as AdminProductsIndexImport } from './routes/admin/products/index'
import { Route as StoreProductsIndexImport } from './routes/_store/products/index'
import { Route as AdminProductsIdImport } from './routes/admin/products/$id'
import { Route as StoreProductsIdImport } from './routes/_store/products/$id'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const StoreRoute = StoreImport.update({
  id: '/_store',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)

const StoreIndexRoute = StoreIndexImport.update({
  path: '/',
  getParentRoute: () => StoreRoute,
} as any)

const AdminUsersRoute = AdminUsersImport.update({
  path: '/users',
  getParentRoute: () => AdminRoute,
} as any)

const AdminOrdersRoute = AdminOrdersImport.update({
  path: '/orders',
  getParentRoute: () => AdminRoute,
} as any)

const StoreCategoryRoute = StoreCategoryImport.update({
  path: '/$category',
  getParentRoute: () => StoreRoute,
} as any)

const AdminProductsIndexRoute = AdminProductsIndexImport.update({
  path: '/products/',
  getParentRoute: () => AdminRoute,
} as any)

const StoreProductsIndexRoute = StoreProductsIndexImport.update({
  path: '/products/',
  getParentRoute: () => StoreRoute,
} as any)

const AdminProductsIdRoute = AdminProductsIdImport.update({
  path: '/products/$id',
  getParentRoute: () => AdminRoute,
} as any)

const StoreProductsIdRoute = StoreProductsIdImport.update({
  path: '/products/$id',
  getParentRoute: () => StoreRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_store': {
      preLoaderRoute: typeof StoreImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_store/$category': {
      preLoaderRoute: typeof StoreCategoryImport
      parentRoute: typeof StoreImport
    }
    '/admin/orders': {
      preLoaderRoute: typeof AdminOrdersImport
      parentRoute: typeof AdminImport
    }
    '/admin/users': {
      preLoaderRoute: typeof AdminUsersImport
      parentRoute: typeof AdminImport
    }
    '/_store/': {
      preLoaderRoute: typeof StoreIndexImport
      parentRoute: typeof StoreImport
    }
    '/admin/': {
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/_store/products/$id': {
      preLoaderRoute: typeof StoreProductsIdImport
      parentRoute: typeof StoreImport
    }
    '/admin/products/$id': {
      preLoaderRoute: typeof AdminProductsIdImport
      parentRoute: typeof AdminImport
    }
    '/_store/products/': {
      preLoaderRoute: typeof StoreProductsIndexImport
      parentRoute: typeof StoreImport
    }
    '/admin/products/': {
      preLoaderRoute: typeof AdminProductsIndexImport
      parentRoute: typeof AdminImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  StoreRoute.addChildren([
    StoreCategoryRoute,
    StoreIndexRoute,
    StoreProductsIdRoute,
    StoreProductsIndexRoute,
  ]),
  AdminRoute.addChildren([
    AdminOrdersRoute,
    AdminUsersRoute,
    AdminIndexRoute,
    AdminProductsIdRoute,
    AdminProductsIndexRoute,
  ]),
  LoginRoute,
])

/* prettier-ignore-end */
